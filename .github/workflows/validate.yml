name: Validate Integration

on:
  push:
    branches: [main]
    paths:
      - 'custom_components/violet_pool_controller/**'
      - '.github/workflows/validate.yml'
      - 'requirements*.txt'
      - 'pyproject.toml'
  pull_request:
    branches: [main]
    paths:
      - 'custom_components/violet_pool_controller/**'
      - '.github/workflows/validate.yml'
      - 'requirements*.txt'
      - 'pyproject.toml'
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]
        home-assistant-version: 
          - "2024.12.0"
          - "2025.1.0"
          - "2025.2.0-dev"  # Beta version
        exclude:
          # Skip Python 3.13 with older HA versions if compatibility issues
          - python-version: "3.13"
            home-assistant-version: "2024.12.0"
        include:
          # Allow beta versions to fail without failing the entire job
          - python-version: "3.12"
            home-assistant-version: "2025.2.0-dev"
            experimental: true
    continue-on-error: ${{ matrix.experimental || false }}
    
    steps:
      - uses: actions/checkout@v5
      
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [[ "${{ matrix.home-assistant-version }}" == *"-dev" ]]; then
            # Install beta/dev version
            pip install --pre homeassistant
          else
            pip install homeassistant==${{ matrix.home-assistant-version }}
          fi
          pip install aiohttp>=3.8.0
          pip install ruff mypy pytest
          
      - name: Lint with Ruff
        run: ruff check custom_components/violet_pool_controller/ --line-length=120
        
      - name: Type check with mypy
        run: mypy custom_components/violet_pool_controller/ --ignore-missing-imports
        
      - name: Validate with hassfest
        uses: home-assistant/actions/hassfest@master
        
      - name: Validate with HACS
        uses: hacs/action@main
        with:
          category: integration

  test-results:
    runs-on: ubuntu-latest
    needs: validate
    if: always()
    steps:
      - name: Test Results Summary
        run: |
          echo "## Validation Results ðŸ§ª" >> $GITHUB_STEP_SUMMARY
          echo "| Python | Home Assistant | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|---------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "Validation completed for all matrix combinations." >> $GITHUB_STEP_SUMMARY
