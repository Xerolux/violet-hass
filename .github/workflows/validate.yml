name: Validate Integration

on:
  push:
    branches: [main]
    paths:
      - 'custom_components/violet_pool_controller/**'
      - '.github/workflows/validate.yml'
      - 'requirements*.txt'
      - 'pyproject.toml'
  pull_request:
    branches: [main]
    paths:
      - 'custom_components/violet_pool_controller/**'
      - '.github/workflows/validate.yml'
      - 'requirements*.txt'
      - 'pyproject.toml'
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
        home-assistant-version: 
          - "2024.12.0"
          - "2025.1.0"
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          
      - name: Install Home Assistant ${{ matrix.home-assistant-version }}
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install homeassistant==${{ matrix.home-assistant-version }}
          pip install aiohttp>=3.8.0
          pip install ruff mypy pytest pytest-cov pytest-asyncio
          
      - name: Lint with Ruff
        run: |
          ruff check custom_components/violet_pool_controller/ \
            --line-length=120 \
            --output-format=github
        continue-on-error: true
        
      - name: Format check with Ruff
        run: |
          ruff format custom_components/violet_pool_controller/ --check
        continue-on-error: true
        
      - name: Type check with mypy
        run: |
          mypy custom_components/violet_pool_controller/ \
            --ignore-missing-imports \
            --no-strict-optional \
            --warn-return-any
        continue-on-error: true
        
      - name: Validate with hassfest
        uses: home-assistant/actions/hassfest@master
        
      - name: Validate with HACS
        uses: hacs/action@main
        with:
          category: integration
          
      - name: Create validation summary
        if: always()
        run: |
          echo "## ✅ Validation Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Python:** ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Home Assistant:** ${{ matrix.home-assistant-version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All validation checks completed successfully!" >> $GITHUB_STEP_SUMMARY

  test:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install homeassistant==2025.1.0
          pip install pytest pytest-cov pytest-asyncio
          pip install aiohttp>=3.8.0
          
      - name: Run tests
        run: |
          if [ -d "tests" ]; then
            pytest tests/ \
              --cov=custom_components/violet_pool_controller \
              --cov-report=xml \
              --cov-report=term-missing
          else
            echo "⚠️ No tests directory found - skipping tests"
          fi
        continue-on-error: true
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        if: always()
        continue-on-error: true
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  summary:
    runs-on: ubuntu-latest
    needs: [validate, test]
    if: always()
    steps:
      - name: Final Summary
        run: |
          echo "## 🎯 Integration Validation Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Validation | ${{ needs.validate.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Tests | ${{ needs.test.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.validate.result }}" == "success" ]] && \
             [[ "${{ needs.test.result }}" == "success" ]]; then
            echo "✅ **All checks passed!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Some checks did not pass. Please review the logs.**" >> $GITHUB_STEP_SUMMARY
          fi