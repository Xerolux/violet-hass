name: "Release"

on:
  push:
    tags:
      - V[0-9]+.[0-9]+.[0-9]+.[0-9]+  # Matches tags like V1.2.3.4
      - v[0-9]+.[0-9]+.[0-9]+.[0-9]+  # Matches tags like v1.2.3.4
      - [0-9]+.[0-9]+.[0-9]+.[0-9]+   # Matches tags like 1.2.3.4
  workflow_dispatch: # Manuelle Ausführung möglich

jobs:
  release:
    name: "Create Release"
    runs-on: "ubuntu-latest"
    permissions:
      contents: write  # Erforderlich für das Erstellen von Releases und Commits

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install yq
        run: sudo apt-get update && sudo apt-get install -y yq

      - name: Ensure correct tag format
        id: fix_tag
        run: |
          TAG_NAME="${{ github.ref_name }}"
          TAG_NAME=$(echo "$TAG_NAME" | sed -E 's/^V|^([0-9])$/v\1/')  # Umwandlung in 'vX.Y.Z.W'
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "Final Tag Name: $TAG_NAME"

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.TAG_NAME }}  # Korrigiertes Tag verwenden
          excludeTypes: build,docs,other,style
          writeToFile: true
          changelogFilePath: CHANGELOG.md
          includeRefIssues: true
          useGitmojis: true
          includeInvalidCommits: false
          reverseOrder: false

      - name: Commit CHANGELOG.md
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: 'docs: update CHANGELOG.md for ${{ env.TAG_NAME }} [skip ci]'
          file_pattern: CHANGELOG.md

      - name: Ensure ZIP creation
        shell: "bash"
        run: |
          cd "${{ github.workspace }}/custom_components"

          if [ -d "violet_pool_controller" ]; then
            echo "Creating ZIP package..."
            zip -r violet_pool_controller.zip violet_pool_controller
          else
            echo "Error: violet_pool_controller directory not found!"
            exit 1
          fi

      - name: Determine if it's a pre-release
        id: check_prerelease
        run: |
          TAG_NAME="${{ env.TAG_NAME }}"
          if [[ "$TAG_NAME" =~ - ]]; then
            echo "PRERELEASE=true" >> $GITHUB_ENV
          else
            echo "PRERELEASE=false" >> $GITHUB_ENV
          fi

      - name: "Create GitHub Release"
        uses: "ncipollo/release-action@v1"
        with:
          allowUpdates: true
          draft: false
          prerelease: ${{ env.PRERELEASE }}  # Automatische Erkennung
          makeLatest: true
          name: ${{ env.TAG_NAME }}
          body: ${{ steps.changelog.outputs.changes }}
          files: "${{ github.workspace }}/custom_components/violet_pool_controller.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.TAG_NAME }}
