name: "Release"

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*  # Matches tags like v1.2.3, v1.2.3-beta, etc.
  workflow_dispatch: # Allow manual execution

jobs:
  release:
    name: "Create Release"
    runs-on: "ubuntu-latest"
    permissions:
      contents: write  # Required for creating releases and committing to the repo

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install yq
        run: |
          sudo apt-get update && sudo apt-get install -y yq

      - name: Adjust version number
        shell: "bash"
        env:
          VERSION: "${{ github.ref_name }}"  # Use github.ref_name directly for tag pushes
        run: |
          # Extract version number, removing 'v' prefix if present
          VERSION=$(echo "$VERSION" | sed 's/^refs\/tags\/v//') # Corrected regex
          echo "Setting version to: $VERSION"
          yq -i '.version = env(VERSION)' "${{ github.workspace }}/custom_components/violet_pool_controller/manifest.json"
          # Also update const.py
          yq -i '.INTEGRATION_VERSION = env(VERSION)' "${{ github.workspace }}/custom_components/violet_pool_controller/const.py"

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # Use GITHUB_TOKEN
          tag: ${{ github.ref_name }}

      - name: Commit CHANGELOG.md
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main  # Commit to the main branch
          commit_message: 'docs: update CHANGELOG.md for ${{ github.ref_name }} [skip ci]' # Include [skip ci]
          file_pattern: CHANGELOG.md # Specify the file to commit


      - name: "Debug manifest.json and const.py"
        run: |
          echo "manifest.json:"
          cat "${{ github.workspace }}/custom_components/violet_pool_controller/manifest.json"
          echo "const.py:"
          cat "${{ github.workspace }}/custom_components/violet_pool_controller/const.py"

      - name: "ZIP the integration directory"
        shell: "bash"
        run: |
          cd "${{ github.workspace }}/custom_components"
          zip -r violet_pool_controller.zip violet_pool_controller

      - name: "Create GitHub Release"  # Combined Release Creation and Asset Upload
        uses: "ncipollo/release-action@v1"
        with:
          allowUpdates: true  # Allow updating existing releases
          draft: false
          prerelease: false # Changed: This should be handled by your tagging strategy
          makeLatest: true
          name: ${{ github.ref_name }}  # Use the tag name
          body: ${{ steps.changelog.outputs.changes }}  # Use the generated changelog
          files: "${{ github.workspace }}/custom_components/violet_pool_controller.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }} # Explicitly specify the tag
