name: "Release & Update Release Body"

on:
  release:
    types:
      - published
      - prereleased
      - edited
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    name: "Release"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout the repository"
        uses: actions/checkout@v4

      - name: "Install correct yq version"
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
          yq --version

      - name: "Determine Version"
        shell: bash
        run: |
          if [ -z "${{ github.event.release.tag_name }}" ]; then
            echo "Kein Tag angegeben ‚Äì lese Version aus der .version Datei"
            if [ -f "${{ github.workspace }}/custom_components/violet_pool_controller/.version" ]; then
              VERSION=$(cat "${{ github.workspace }}/custom_components/violet_pool_controller/.version")
            else
              echo "Fehler: .version-Datei nicht gefunden!"
              exit 1
            fi
          else
            VERSION="${{ github.event.release.tag_name }}"
          fi
          echo "Setze Version auf: $VERSION"
          echo "$VERSION" > "${{ github.workspace }}/custom_components/violet_pool_controller/.version"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: "Adjust version number in manifest.json"
        run: |
          yq -i '.version = strenv(VERSION)' "${{ github.workspace }}/custom_components/violet_pool_controller/manifest.json"

      - name: "Adjust version number in const.py"
        run: |
          sed -i "s/^INTEGRATION_VERSION\s*=.*/INTEGRATION_VERSION = '$VERSION'/" "${{ github.workspace }}/custom_components/violet_pool_controller/const.py"

      - name: "Commit and Push .version file"
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: "chore: update .version file to ${{ env.VERSION }}"
          file_pattern: "custom_components/violet_pool_controller/.version"

      - name: "ZIP the integration directory"
        shell: bash
        run: |
          cd "${{ github.workspace }}/custom_components"
          zip -r violet_pool_controller.zip violet_pool_controller

      - name: "Upload the ZIP file to the release"
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          files: "${{ github.workspace }}/custom_components/violet_pool_controller.zip"
          prerelease: ${{ github.event.release.prerelease || 'false' }}
          automatic_release_tag: ${{ github.event.release.tag_name || env.VERSION }}

      - name: "Update Release Body"
        uses: actions/github-script@v7
        env:
          VERSION: ${{ env.VERSION }}
        with:
          script: |
            const version = process.env.VERSION || context.payload.release.tag_name;
            const releaseBody = `
v${version} ‚Äì Bug Fixes & Improvements üéâ

üîß Bug Fixes:

üöÄ Improvements:


---

‚ù§Ô∏è Support My Project:

[‚òï Buy Me a Coffee ‚òï](https://buymeacoffee.com/xerolux)

Every contribution, no matter how small, is a huge motivation! Thank you so much for your support! üôè

---

üí¨ Feedback & Contributions:
I‚Äôm always open to feedback, suggestions, or contributions from the community. Feel free to open an issue or submit a pull request.

Thank you for your support, and enjoy the new version! üöÄ
`.trim();
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id,
              body: releaseBody,
            });
